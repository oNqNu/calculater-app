@import './styles/tokens.css';

@keyframes gridRotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes diagonalMove {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 50px 50px;
  }
}

@keyframes lineSlide {
  0% {
    transform: translateX(-100%) rotate(45deg);
  }
  100% {
    transform: translateX(100%) rotate(45deg);
  }
}

body {
  margin: 0;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background: var(--color-background);
  transition: background-color 0.3s ease;
  overflow: hidden;
  position: relative;
}

.geometric-grid {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-image: 
    linear-gradient(var(--color-primary) 1px, transparent 1px),
    linear-gradient(90deg, var(--color-primary) 1px, transparent 1px);
  background-size: 15px 15px;
  opacity: 0.07;
  animation: gridRotate 40s linear infinite;
  pointer-events: none;
}

.geometric-grid::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    linear-gradient(var(--color-primary) 2px, transparent 2px),
    linear-gradient(90deg, var(--color-primary) 2px, transparent 2px);
  background-size: 45px 45px;
  opacity: 0.1;
  animation: gridRotate 30s linear infinite reverse;
}

.geometric-lines {
  position: fixed;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  pointer-events: none;
}

.geometric-lines::before,
.geometric-lines::after {
  content: '';
  position: absolute;
  width: 200%;
  height: 1px;
  background: var(--color-primary);
  opacity: 0.15;
}

.geometric-lines::before {
  top: 30%;
  animation: lineSlide 3s linear infinite;
}

.geometric-lines::after {
  top: 70%;
  animation: lineSlide 3s linear infinite reverse;
}

.diagonal-grid {
  position: fixed;
  width: 100vw;
  height: 100vh;
  background-image: 
    repeating-linear-gradient(45deg, var(--color-primary) 0, var(--color-primary) 1px, transparent 1px, transparent 15px),
    repeating-linear-gradient(-45deg, var(--color-primary) 0, var(--color-primary) 1px, transparent 1px, transparent 15px);
  opacity: 0.07;
  animation: diagonalMove 4s linear infinite;
  pointer-events: none;
}

.diagonal-grid::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    repeating-linear-gradient(45deg, var(--color-primary) 0, var(--color-primary) 2px, transparent 2px, transparent 30px),
    repeating-linear-gradient(-45deg, var(--color-primary) 0, var(--color-primary) 2px, transparent 2px, transparent 30px);
  opacity: 0.1;
  animation: diagonalMove 6s linear infinite reverse;
}

.calculator {
  width: min(320px, 90vw);
  background: var(--color-surface);
  border-radius: 20px;
  box-shadow: var(--shadow-calculator),
    0 0 20px rgba(0, 0, 0, 0.2);
  padding: clamp(10px, 3vw, 20px);
  position: relative;
  transition: all 0.3s ease;
  z-index: 1;
  backdrop-filter: blur(10px);
}

.theme-toggle {
  position: absolute;
  top: -95px;
  right: 10px;
  width: clamp(32px, 8vw, 40px);
  height: clamp(32px, 8vw, 40px);
  padding: clamp(6px, 2vw, 8px);
  font-size: clamp(16px, 4vw, 20px);
  border: none;
  border-radius: 50%;
  background: var(--color-surface);
  color: var(--color-text-primary);
  cursor: pointer;
  box-shadow: var(--shadow-calculator);
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
}

.theme-toggle:hover {
  transform: scale(1.1);
}

.display {
  background: var(--color-surface-dark);
  border-radius: 10px;
  padding: clamp(12px, 3vw, 20px);
  margin-bottom: clamp(12px, 3vw, 20px);
  text-align: right;
  transition: background-color 0.3s ease;
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

.equation {
  min-height: clamp(16px, 4vw, 20px);
  color: var(--color-text-secondary);
  font-size: clamp(12px, 3vw, 14px);
  margin-bottom: clamp(3px, 1vw, 5px);
  transition: color 0.3s ease;
}

.current {
  font-size: clamp(28px, 6vw, 40px);
  font-weight: bold;
  color: var(--color-text-primary);
  word-wrap: break-word;
  transition: color 0.3s ease;
}

.buttons {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: clamp(8px, 2vw, 15px);
}

button {
  padding: clamp(12px, 3vw, 20px);
  font-size: clamp(18px, 4vw, 24px);
  border: none;
  border-radius: 10px;
  background: var(--color-button-background);
  color: var(--color-text-primary);
  cursor: pointer;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  min-width: clamp(40px, 10vw, 60px);
  min-height: clamp(40px, 10vw, 60px);
}

button:hover {
  background: var(--color-button-hover);
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

button:active {
  transform: translateY(1px);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.operator {
  background: var(--color-primary);
  color: var(--color-text-primary);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
}

.operator:hover {
  background: var(--color-primary-hover);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.operator-top {
  background: var(--color-button-background);
  color: var(--color-primary);
}

.operator-top:hover {
  background: var(--color-button-hover);
}

.clear {
  background: var(--color-button-background);
  color: var(--color-primary);
  grid-column: span 2;
}

.clear:hover {
  background: var(--color-button-hover);
}

.equal {
  background: var(--color-primary);
  color: var(--color-text-primary);
  grid-column: 4;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
}

.equal:hover {
  background: var(--color-primary-hover);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.zero {
  grid-column: span 2;
}
